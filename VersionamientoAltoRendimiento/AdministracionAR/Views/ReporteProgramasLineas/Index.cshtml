@model AltoRendimiento.Administracion.Models.ReporteProgramasLineasModel

@{
    ViewBag.Title = "Reporte General por Líneas";
}

<!-- modal placeholder-->
<div id='myModal' class='modal fade'>
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <ol class="breadcrumb">
            <li>@Html.ActionLink("Inicio", "Index", "BandejaEntrada")</li>
            <li>Reporte General por Líneas</li>
        </ol>
    </div>
</div>
<h2>Reporte General por Líneas</h2>
@Html.ActionLink("Exportar a Excel", "GenerarReporte", "ReporteProgramasLineas", new { idPrograma = Model.IdPrograma, anio = Model.anioPresupuesto, cuenta = Model.NumeroCuenta }, new { data_modal = "", id = "btnGenerarReporte", @class = "btn btn-sm btn-info pull-right", @style = "color:White" })
<br />
<br />
<div id="mensaje"></div>

<script src="~/Scripts/jquery.dataTables.min.js"></script>
<script src="~/Scripts/dataTables.bootstrap.min.js"></script>
<link href="~/Content/dataTables.bootstrap.min.css" rel="stylesheet" />

<div class="row">
    <div class="col-xs-12 col-md-12">
        <div class="panel panel-default">
            <!-- Default panel contents -->
            <div class="panel-heading">Filtros</div>
            @using (Html.BeginForm("Index", "ReporteProgramasLineas", FormMethod.Post, new { Id = "form-BuscarProgramas" }))
            {
                <div class="panel-body">
                    <div class="row">

                        <div class="form-group">
                            <label class="col-xs-2 control-label" for="label">@Html.LabelFor(p => p.anioPresupuesto)</label>
                            <div class="col-xs-4">
                                @Html.TextBoxFor(p => p.anioPresupuesto, new { @class = "form-control", @maxlength = "4", @onkeypress = "return permite(event, 'numeros');", @placeholder = "1234" })
                            </div>
                            <label class="col-xs-2 control-label" for="label">@Html.LabelFor(p => p.NumeroCuenta)</label>
                            <div class="col-xs-4">
                                @Html.TextBoxFor(p => p.NumeroCuenta, new { @class = "form-control", @maxlength = "13", @onkeypress = "return permite(event, 'numeros');", @placeholder = "1234567890123" })
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-xs-12 col-md-12">
                            <div class="pull-right">
                                <input id="btnBuscar" type="submit" class="btn btn-sm btn btn-success" value="Buscar" />
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-7">
                            <div class="pull-right">
                                <a href="ReporteProgramasLineas" class="btn btn-primary">Limpiar</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div id="dvProgramas">
    <h3>Cuentas Presupuestarias</h3>
    <div class="table-responsive">
        <table id="tblProgramas" class="table table-condensed table-bordered  table-hover">
            <thead>
                <tr>
                    <th>
                        Número Cuenta
                    </th>
                    <th>
                        Programa
                    </th>
                    <th>
                        Año presupuestario
                    </th>
                    <th>
                        Monto
                    </th>
                    <th>
                        Acciones
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ListaProgramas)
                {
                    <tr>
                        <td>
                            @item.NumeroCuenta
                        </td>
                        <td>
                            @item.NombrePrograma
                        </td>
                        <td>
                            @item.anioPresupuesto
                        </td>
                        <td>
                            @item.MontoPrograma
                        </td>

                        <td>
                            @Html.ActionLink("Ver Línea", null, null, new { onClick = "verLineas(" + item.IdPrograma + ", '" + Model.anioPresupuesto + "', '" + Model.NumeroCuenta + "'); return false;" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div id="dvLineas" style="display:none;">
    <h3>Cuentas Presupuestarias</h3>
    <div id="dvTblLineas" class="table-responsive">

    </div>
</div>

@section Scripts{

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/modalform")

    <script>
        $(document).ready(function () {
            $("#tblProgramas").DataTable({
                "language":
                    {
                        "sProcessing": "Procesando...",
                        "sLengthMenu": "Mostrar _MENU_ registros",
                        "sZeroRecords": "No se encontraron resultados",
                        "sEmptyTable": "Ningún dato disponible en esta tabla",
                        "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                        "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                        "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                        "sInfoPostFix": "",
                        "sSearch": "Buscar:",
                        "sUrl": "",
                        "sInfoThousands": ",",
                        "sLoadingRecords": "Cargando...",
                        "oPaginate": {
                            "sFirst": "Primero",
                            "sLast": "último",
                            "sNext": "Siguiente",
                            "sPrevious": "Anterior"
                        },
                        "oAria": {
                            "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                            "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                        }
                    }
            });
        });



        var idPrograma = "";
        var anio = "";
        var cuenta = "";

        function verLineas(programa, parAnio, parCuenta) {
            $("#mensaje").html("");
            idPrograma = programa;
            anio = parAnio;
            cuenta = parCuenta;

            $.getJSON(
                 "@Url.Action("ObtenerLineasPorPrograma")",// URL a la acción
                { paramUno: idPrograma },                  // Objeto JSON con parámetros
                function (data) {                    // Función de retorno exitoso
                    $("#dvTblLineas").empty();
                    var obJson = JSON.parse(data);
                    var inicioEtiqueta = "<td>";
                    var finEtiqueta = "</td>";
                    if (obJson.length > "0") {
                        $("#dvTblLineas").append('<table id="tblLineas" class="table table-condensed table-bordered  table-hover">' +
                                                    '<thead id="tbhListaLineas">' +
                                                    '</thead>' +
                                                    '<tbody id="tbdListaLineas"></tbody>' +
                                                '</table>');

                        var urlReporte = '@Url.Action("GenerarReporte", "ReporteProgramasLineas", new { idPrograma = "paramIdPrograma", anio = "paramAnio", cuenta="paramCuenta" })';
                        urlReporte = urlReporte.replace(/&amp;/g, "&").replace("paramIdPrograma", encodeURIComponent(idPrograma)).replace("paramAnio", encodeURIComponent(anio)).replace("paramCuenta", encodeURIComponent(cuenta));
                        $("#btnGenerarReporte").attr("href", urlReporte);
                        var filaTitulo = "<tr>";
                        filaTitulo += "<th>";
                        filaTitulo += "Número Línea";
                        filaTitulo += "</th>";
                        filaTitulo += "<th>";
                        filaTitulo += "    Nombre de Línea";
                        filaTitulo += "</th>";
                        filaTitulo += "<th>";
                        filaTitulo += "    Presupuesto";
                        filaTitulo += "</th>";
                        filaTitulo += "<th>";
                        filaTitulo += "    Comprometido";
                        filaTitulo += "</th>";
                        filaTitulo += "<th>";
                        filaTitulo += "Ejecutado";
                        filaTitulo += "</th>";
                        filaTitulo += "<th>";
                        filaTitulo += "Disponible";
                        filaTitulo += "</th>";
                        filaTitulo += "<th>";
                        filaTitulo += "Reintegro";
                        filaTitulo += "</th>";
                        filaTitulo += "</tr>";
                        $("#tbhListaLineas").append(filaTitulo);

                        $.each(obJson, function (i, item) {
                            var fila = "<tr>";

                            fila += inicioEtiqueta;
                            fila += item.NumeroLinea;
                            fila += finEtiqueta;

                            fila += inicioEtiqueta;
                            fila += item.NombreLinea;
                            fila += finEtiqueta;

                            fila += inicioEtiqueta;
                            fila += item.PresupuestoLinea;
                            fila += finEtiqueta;

                            fila += inicioEtiqueta;
                            fila += item.MontoCompLinea;
                            fila += finEtiqueta;

                            fila += inicioEtiqueta;
                            fila += item.MontoEjecLinea;
                            fila += finEtiqueta;

                            fila += inicioEtiqueta;
                            fila += item.MontoDispLinea;
                            fila += finEtiqueta;

                            fila += inicioEtiqueta;
                            fila += item.MontoReintLinea;
                            fila += finEtiqueta;

                            fila += "</tr>";
                            $("#tbdListaLineas").append(fila);
                        });
                        $("#dvLineas").attr("style", "display:block;");

                        var config = {
                            "language":
                                {
                                    "sProcessing": "Procesando...",
                                    "sLengthMenu": "Mostrar _MENU_ registros",
                                    "sZeroRecords": "No se encontraron resultados",
                                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                                    "sInfoPostFix": "",
                                    "sSearch": "Buscar:",
                                    "sUrl": "",
                                    "sInfoThousands": ",",
                                    "sLoadingRecords": "Cargando...",
                                    "oPaginate": {
                                        "sFirst": "Primero",
                                        "sLast": "último",
                                        "sNext": "Siguiente",
                                        "sPrevious": "Anterior"
                                    },
                                    "oAria": {
                                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                                    }
                                }
                        }

                        var table = $("#tblLineas").DataTable(config);

                    } else {
                        var mensajeUsuario = '<div class="alert alert-danger alert-dismissable"><button type="button" class="close" data-dismiss="alert">&times;</button>El programa seleccionado no tiene Líneas asociadas.</div>';
                        $("#mensaje").html(mensajeUsuario);
                    }
                });
        }
    </script>
}
<script>
    var codError = '@(ViewBag.codError)';
    var mensajeRespuesta = '@(ViewBag.respuesta)';
    if (codError == '2') {
        $("#dvProgramas").attr("style", "display:none;");
        $("#dvInfoPaginacion").attr("style", "display:none;");
        var mensajeUsuario = '<div class="alert alert-danger alert-dismissable"><button type="button" class="close" data-dismiss="alert">&times;</button>' + mensajeRespuesta + '</div>';
        $("#mensaje").append(mensajeUsuario);
    }
</script>