@model AltoRendimiento.Administracion.Models.LineaModel

@{
    ViewBag.Title = "Editar Línea.";
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">Editar Línea</h4>
</div>
@using (Html.BeginForm())
{
    <div class="modal-body">
        <div class="form-horizontal">
            <div id="divMensaje">
            </div>
            @Html.ValidationSummary(true)
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.idLinea)
            @Html.HiddenFor(model => model.idCuentaInicio)
            <div class="panel panel-default">
                <div class="panel-heading">
                    Antecedentes Línea
                </div>
                <div class="panel-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.idPrograma, new { @class = "col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.idPrograma, Model.ListaPrograma, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.idPrograma, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.idLineaClasificacion, new { @class = "col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.idLineaClasificacion, Model.ListaLineaClasificacion, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.idLineaClasificacion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.linNombre, new { @class = "col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.linNombre, new { @class = "form-control", @maxlength = "128" })
                            @Html.ValidationMessageFor(model => model.linNombre, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.linDescripcion, new { @class = "col-md-4" })
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.linDescripcion, new { @class = "form-control", @maxlength = "2048", @style = "resize:none;", @rows = "5" })
                            @Html.ValidationMessageFor(model => model.linDescripcion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">
                    Antecedentes Cuenta
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.idCuenta, new { @class = "col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.idCuenta, Model.ListaCuenta, new { @class = "form-control", @onchange = "buscaInfoCuenta()" })
                        @Html.ValidationMessageFor(model => model.idCuenta, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.sCuentaAnio, new { @class = "col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.sCuentaAnio, new { @class = "form-control", @disabled = "disabled" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.sCuentaNumero, new { @class = "col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.sCuentaNumero, new { @class = "form-control", @disabled = "disabled" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.sCuentaCentroFinanciero, new { @class = "col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.sCuentaCentroFinanciero, new { @class = "form-control", @disabled = "disabled" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ctaPresupuestoVigente, new { @class = "col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.ctaPresupuestoVigente, new { @class = "form-control", @maxlength = "18", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.ctaPresupuestoVigente, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" id="btnCancelar" class="btn btn-sm btn-danger pull-left" data-dismiss="modal">Cancelar</button>
        <button type="submit" id="btnEditar" class="btn btn-sm btn-success">Guardar</button>
    </div>
}

<script>
    function buscaInfoCuenta() {
        var nIdCuenta = $("#idCuenta").val();
        $.ajax({
            url: "/MantenedorLinea/BuscaInfoCuenta"
            , method: "POST"
            , dataType: "JSON"
            , data: { idCuenta: nIdCuenta }
            , success: function (info) {
                if (info.Codigo == 0) {
                    bootbox.alert({ message: info.Mensaje, backdrop: false });
                } else {
                    $("#sCuentaAnio").val(info.sCuentaAnio);
                    $("#sCuentaNumero").val(info.sCuentaNumero);
                    $("#sCuentaCentroFinanciero").val(info.sCuentaCentroFinanciero);
                    $("#ctaPresupuestoVigente").val(info.ctaPresupuestoVigente);
                }
            }
        });
    }

    var codRespuesta = '@(ViewBag.codRespuesta)';
    var msgRespuesta = '@(ViewBag.msgRespuesta)';
    var tipoEstilo = "";
    if (msgRespuesta != "") {
        $("#btnEditar").attr("disabled", "disabled");
        $("#btnCancelar").html("Cerrar");
        $("#idPrograma").attr("disabled", "disabled");
        $("#idLineaClasificacion").attr("disabled", "disabled");
        $("#linNombre").attr("disabled", "disabled");
        $("#linDescripcion").attr("disabled", "disabled");
        $("#ctaPresupuestoVigente").attr("disabled", "disabled");
        $("#idCuenta").attr("disabled", "disabled");
        if (codRespuesta == '0') {
            tipoEstilo = "alert-success";
        } else {
            tipoEstilo = "alert-danger";
        }
        $("#divMensaje").append('<div class="alert ' + tipoEstilo + ' alert-dismissable"><button type="button" class="close" data-dismiss="alert">&times;</button>' + msgRespuesta + '</div>');
    }
</script>
